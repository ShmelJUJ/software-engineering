// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Transaction Service",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit"
    },
    "version": "v1"
  },
  "host": "localhost:8083",
  "basePath": "/api/v1",
  "paths": {
    "/transaction/create": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "transaction"
        ],
        "summary": "The method is used to create transactions.",
        "operationId": "createTransaction",
        "parameters": [
          {
            "description": "Created transaction object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTransactionRequest"
            }
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "X-Idempotency-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction successfully created.",
            "schema": {
              "$ref": "#/definitions/CreateTransactionResponse"
            }
          },
          "400": {
            "description": "Validation error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/transaction/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "transaction"
        ],
        "summary": "The method is used to user login.",
        "operationId": "login",
        "parameters": [
          {
            "description": "Get login token.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "X-Idempotency-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logined.",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Validation error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/transaction/{id}/accept": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "transaction"
        ],
        "summary": "The method is used to accept the transaction.",
        "operationId": "acceptTransaction",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Transaction id to retrieve.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Information required to accpet a transaction.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptTransactionRequest"
            }
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "X-Idempotency-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction successfully accepted."
          },
          "403": {
            "description": "Forbidden error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/transaction/{id}/cancel": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "transaction"
        ],
        "summary": "The method is used to cancel a transaction.",
        "operationId": "cancelTransaction",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Transaction id to cancel.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Information required to cancel a transaction.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelTransactionRequest"
            }
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "X-Idempotency-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction successfully cancelled."
          },
          "403": {
            "description": "Forbidden error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/transaction/{id}/edit": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "transaction"
        ],
        "summary": "The method is used to edit a transaction.",
        "operationId": "editTransaction",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Transaction id to edit.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Information required to change a transaction.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditTransactionRequest"
            }
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "X-Idempotency-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction successfully edited."
          },
          "400": {
            "description": "Validation error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/transaction/{id}/retrieve": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "transaction"
        ],
        "summary": "The method is used to retrieve the transaction.",
        "operationId": "retrieveTransaction",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Transaction id to retrieve.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/GetTransactionResponse"
            }
          },
          "403": {
            "description": "Forbidden error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/transaction/{id}/retrieve/status": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "transaction"
        ],
        "summary": "The method is used to get the status of the transaction.",
        "operationId": "retrieveTransactionStatus",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Transaction id to retrieve status.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction status successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/GetTransactionStatusResponse"
            }
          },
          "403": {
            "description": "Forbidden error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AcceptTransactionRequest": {
      "type": "object",
      "required": [
        "sender"
      ],
      "properties": {
        "sender": {
          "$ref": "#/definitions/AcceptTransactionUserRequest"
        }
      }
    },
    "AcceptTransactionUserRequest": {
      "type": "object",
      "required": [
        "user_id",
        "wallet_id"
      ],
      "properties": {
        "user_id": {
          "type": "string",
          "format": "uuid"
        },
        "wallet_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "CancelTransactionRequest": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        }
      }
    },
    "CreateTransactionRequest": {
      "type": "object",
      "required": [
        "money_info",
        "receiver"
      ],
      "properties": {
        "money_info": {
          "$ref": "#/definitions/MoneyInfo"
        },
        "receiver": {
          "$ref": "#/definitions/CreateTransactionUserRequest"
        }
      }
    },
    "CreateTransactionResponse": {
      "type": "object",
      "required": [
        "transaction_id"
      ],
      "properties": {
        "transaction_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "CreateTransactionUserRequest": {
      "type": "object",
      "required": [
        "user_id",
        "wallet_id"
      ],
      "properties": {
        "user_id": {
          "type": "string",
          "format": "uuid"
        },
        "wallet_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "EditMoneyInfo": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "currency": {
          "type": "string"
        },
        "method": {
          "type": "string"
        }
      }
    },
    "EditTransactionRequest": {
      "type": "object",
      "properties": {
        "money_info": {
          "$ref": "#/definitions/EditMoneyInfo"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "GetTransactionResponse": {
      "type": "object",
      "required": [
        "receiver",
        "currency",
        "amount",
        "status",
        "method"
      ],
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "currency": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "receiver": {
          "$ref": "#/definitions/GetTransactionUserResponse"
        },
        "sender": {
          "$ref": "#/definitions/GetTransactionUserResponse"
        },
        "status": {
          "type": "string",
          "enum": [
            "created",
            "processed",
            "canceled",
            "failed",
            "succeeded"
          ]
        }
      }
    },
    "GetTransactionStatusResponse": {
      "type": "object",
      "required": [
        "transaction_status"
      ],
      "properties": {
        "transaction_status": {
          "type": "string",
          "enum": [
            "created",
            "processed",
            "canceled",
            "failed",
            "succeeded"
          ]
        }
      }
    },
    "GetTransactionUserResponse": {
      "type": "object",
      "required": [
        "user_id",
        "wallet_id"
      ],
      "properties": {
        "user_id": {
          "type": "string",
          "format": "uuid"
        },
        "wallet_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "required": [
        "auth_token"
      ],
      "properties": {
        "auth_token": {
          "type": "string"
        }
      }
    },
    "MoneyInfo": {
      "type": "object",
      "required": [
        "method",
        "currency",
        "amount"
      ],
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "currency": {
          "type": "string"
        },
        "method": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "Methods for transaction management.",
      "name": "transaction"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Transaction Service",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit"
    },
    "version": "v1"
  },
  "host": "localhost:8083",
  "basePath": "/api/v1",
  "paths": {
    "/transaction/create": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "transaction"
        ],
        "summary": "The method is used to create transactions.",
        "operationId": "createTransaction",
        "parameters": [
          {
            "description": "Created transaction object.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTransactionRequest"
            }
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "X-Idempotency-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction successfully created.",
            "schema": {
              "$ref": "#/definitions/CreateTransactionResponse"
            }
          },
          "400": {
            "description": "Validation error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/transaction/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "transaction"
        ],
        "summary": "The method is used to user login.",
        "operationId": "login",
        "parameters": [
          {
            "description": "Get login token.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "X-Idempotency-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logined.",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Validation error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/transaction/{id}/accept": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "transaction"
        ],
        "summary": "The method is used to accept the transaction.",
        "operationId": "acceptTransaction",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Transaction id to retrieve.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Information required to accpet a transaction.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptTransactionRequest"
            }
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "X-Idempotency-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction successfully accepted."
          },
          "403": {
            "description": "Forbidden error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/transaction/{id}/cancel": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "transaction"
        ],
        "summary": "The method is used to cancel a transaction.",
        "operationId": "cancelTransaction",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Transaction id to cancel.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Information required to cancel a transaction.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelTransactionRequest"
            }
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "X-Idempotency-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction successfully cancelled."
          },
          "403": {
            "description": "Forbidden error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/transaction/{id}/edit": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "transaction"
        ],
        "summary": "The method is used to edit a transaction.",
        "operationId": "editTransaction",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Transaction id to edit.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Information required to change a transaction.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditTransactionRequest"
            }
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "X-Idempotency-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction successfully edited."
          },
          "400": {
            "description": "Validation error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/transaction/{id}/retrieve": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "transaction"
        ],
        "summary": "The method is used to retrieve the transaction.",
        "operationId": "retrieveTransaction",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Transaction id to retrieve.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/GetTransactionResponse"
            }
          },
          "403": {
            "description": "Forbidden error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/transaction/{id}/retrieve/status": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "transaction"
        ],
        "summary": "The method is used to get the status of the transaction.",
        "operationId": "retrieveTransactionStatus",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Transaction id to retrieve status.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction status successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/GetTransactionStatusResponse"
            }
          },
          "403": {
            "description": "Forbidden error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AcceptTransactionRequest": {
      "type": "object",
      "required": [
        "sender"
      ],
      "properties": {
        "sender": {
          "$ref": "#/definitions/AcceptTransactionUserRequest"
        }
      }
    },
    "AcceptTransactionUserRequest": {
      "type": "object",
      "required": [
        "user_id",
        "wallet_id"
      ],
      "properties": {
        "user_id": {
          "type": "string",
          "format": "uuid"
        },
        "wallet_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "CancelTransactionRequest": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        }
      }
    },
    "CreateTransactionRequest": {
      "type": "object",
      "required": [
        "money_info",
        "receiver"
      ],
      "properties": {
        "money_info": {
          "$ref": "#/definitions/MoneyInfo"
        },
        "receiver": {
          "$ref": "#/definitions/CreateTransactionUserRequest"
        }
      }
    },
    "CreateTransactionResponse": {
      "type": "object",
      "required": [
        "transaction_id"
      ],
      "properties": {
        "transaction_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "CreateTransactionUserRequest": {
      "type": "object",
      "required": [
        "user_id",
        "wallet_id"
      ],
      "properties": {
        "user_id": {
          "type": "string",
          "format": "uuid"
        },
        "wallet_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "EditMoneyInfo": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "currency": {
          "type": "string"
        },
        "method": {
          "type": "string"
        }
      }
    },
    "EditTransactionRequest": {
      "type": "object",
      "properties": {
        "money_info": {
          "$ref": "#/definitions/EditMoneyInfo"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "GetTransactionResponse": {
      "type": "object",
      "required": [
        "receiver",
        "currency",
        "amount",
        "status",
        "method"
      ],
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "currency": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "receiver": {
          "$ref": "#/definitions/GetTransactionUserResponse"
        },
        "sender": {
          "$ref": "#/definitions/GetTransactionUserResponse"
        },
        "status": {
          "type": "string",
          "enum": [
            "created",
            "processed",
            "canceled",
            "failed",
            "succeeded"
          ]
        }
      }
    },
    "GetTransactionStatusResponse": {
      "type": "object",
      "required": [
        "transaction_status"
      ],
      "properties": {
        "transaction_status": {
          "type": "string",
          "enum": [
            "created",
            "processed",
            "canceled",
            "failed",
            "succeeded"
          ]
        }
      }
    },
    "GetTransactionUserResponse": {
      "type": "object",
      "required": [
        "user_id",
        "wallet_id"
      ],
      "properties": {
        "user_id": {
          "type": "string",
          "format": "uuid"
        },
        "wallet_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "required": [
        "auth_token"
      ],
      "properties": {
        "auth_token": {
          "type": "string"
        }
      }
    },
    "MoneyInfo": {
      "type": "object",
      "required": [
        "method",
        "currency",
        "amount"
      ],
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "currency": {
          "type": "string"
        },
        "method": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "Methods for transaction management.",
      "name": "transaction"
    }
  ]
}`))
}
