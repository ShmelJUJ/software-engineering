// Code generated by go-swagger; DO NOT EDIT.

package transaction

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ShmelJUJ/software-engineering/transaction/internal/generated/models"
)

// CancelTransactionOKCode is the HTTP code returned for type CancelTransactionOK
const CancelTransactionOKCode int = 200

/*
CancelTransactionOK Transaction successfully cancelled.

swagger:response cancelTransactionOK
*/
type CancelTransactionOK struct {
}

// NewCancelTransactionOK creates CancelTransactionOK with default headers values
func NewCancelTransactionOK() *CancelTransactionOK {

	return &CancelTransactionOK{}
}

// WriteResponse to the client
func (o *CancelTransactionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// CancelTransactionForbiddenCode is the HTTP code returned for type CancelTransactionForbidden
const CancelTransactionForbiddenCode int = 403

/*
CancelTransactionForbidden Forbidden error.

swagger:response cancelTransactionForbidden
*/
type CancelTransactionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCancelTransactionForbidden creates CancelTransactionForbidden with default headers values
func NewCancelTransactionForbidden() *CancelTransactionForbidden {

	return &CancelTransactionForbidden{}
}

// WithPayload adds the payload to the cancel transaction forbidden response
func (o *CancelTransactionForbidden) WithPayload(payload *models.ErrorResponse) *CancelTransactionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel transaction forbidden response
func (o *CancelTransactionForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelTransactionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelTransactionNotFoundCode is the HTTP code returned for type CancelTransactionNotFound
const CancelTransactionNotFoundCode int = 404

/*
CancelTransactionNotFound Not found error.

swagger:response cancelTransactionNotFound
*/
type CancelTransactionNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCancelTransactionNotFound creates CancelTransactionNotFound with default headers values
func NewCancelTransactionNotFound() *CancelTransactionNotFound {

	return &CancelTransactionNotFound{}
}

// WithPayload adds the payload to the cancel transaction not found response
func (o *CancelTransactionNotFound) WithPayload(payload *models.ErrorResponse) *CancelTransactionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel transaction not found response
func (o *CancelTransactionNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelTransactionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelTransactionInternalServerErrorCode is the HTTP code returned for type CancelTransactionInternalServerError
const CancelTransactionInternalServerErrorCode int = 500

/*
CancelTransactionInternalServerError Internal server error.

swagger:response cancelTransactionInternalServerError
*/
type CancelTransactionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCancelTransactionInternalServerError creates CancelTransactionInternalServerError with default headers values
func NewCancelTransactionInternalServerError() *CancelTransactionInternalServerError {

	return &CancelTransactionInternalServerError{}
}

// WithPayload adds the payload to the cancel transaction internal server error response
func (o *CancelTransactionInternalServerError) WithPayload(payload *models.ErrorResponse) *CancelTransactionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel transaction internal server error response
func (o *CancelTransactionInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelTransactionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
