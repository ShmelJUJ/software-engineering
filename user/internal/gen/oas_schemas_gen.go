// Code generated by ogen, DO NOT EDIT.

package user

import (
	"github.com/google/uuid"
)

// Ref: #/components/schemas/Error
type Error struct {
	// Human-redable error message.
	Message string `json:"message"`
	// Machine-redable error message.
	Code string `json:"code"`
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// GetCode returns the value of Code.
func (s *Error) GetCode() string {
	return s.Code
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val string) {
	s.Code = val
}

type GetClientByIdBadRequest Error

func (*GetClientByIdBadRequest) getClientByIdRes() {}

type GetClientByIdNotFound Error

func (*GetClientByIdNotFound) getClientByIdRes() {}

type GetWalletByIdBadRequest Error

func (*GetWalletByIdBadRequest) getWalletByIdRes() {}

type GetWalletByIdNotFound Error

func (*GetWalletByIdNotFound) getWalletByIdRes() {}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/User
type User struct {
	ClientID  uuid.UUID `json:"client_id"`
	FirstName OptString `json:"first_name"`
	LastName  OptString `json:"last_name"`
	Email     string    `json:"email"`
	Wallets   []string  `json:"wallets"`
}

// GetClientID returns the value of ClientID.
func (s *User) GetClientID() uuid.UUID {
	return s.ClientID
}

// GetFirstName returns the value of FirstName.
func (s *User) GetFirstName() OptString {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *User) GetLastName() OptString {
	return s.LastName
}

// GetEmail returns the value of Email.
func (s *User) GetEmail() string {
	return s.Email
}

// GetWallets returns the value of Wallets.
func (s *User) GetWallets() []string {
	return s.Wallets
}

// SetClientID sets the value of ClientID.
func (s *User) SetClientID(val uuid.UUID) {
	s.ClientID = val
}

// SetFirstName sets the value of FirstName.
func (s *User) SetFirstName(val OptString) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *User) SetLastName(val OptString) {
	s.LastName = val
}

// SetEmail sets the value of Email.
func (s *User) SetEmail(val string) {
	s.Email = val
}

// SetWallets sets the value of Wallets.
func (s *User) SetWallets(val []string) {
	s.Wallets = val
}

func (*User) getClientByIdRes() {}

// Ref: #/components/schemas/Wallet
type Wallet struct {
	PublicKey  string `json:"public_key"`
	PrivateKey string `json:"private_key"`
}

// GetPublicKey returns the value of PublicKey.
func (s *Wallet) GetPublicKey() string {
	return s.PublicKey
}

// GetPrivateKey returns the value of PrivateKey.
func (s *Wallet) GetPrivateKey() string {
	return s.PrivateKey
}

// SetPublicKey sets the value of PublicKey.
func (s *Wallet) SetPublicKey(val string) {
	s.PublicKey = val
}

// SetPrivateKey sets the value of PrivateKey.
func (s *Wallet) SetPrivateKey(val string) {
	s.PrivateKey = val
}

func (*Wallet) getWalletByIdRes() {}
