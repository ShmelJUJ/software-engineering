// Code generated by go-swagger; DO NOT EDIT.

package monitor

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ShmelJUJ/software-engineering/monitor/internal/generated/models"
)

// ProcessOKCode is the HTTP code returned for type ProcessOK
const ProcessOKCode int = 200

/*
ProcessOK Request successfully processed.

swagger:response processOK
*/
type ProcessOK struct {

	/*
	  In: Body
	*/
	Payload models.ProcessResponse `json:"body,omitempty"`
}

// NewProcessOK creates ProcessOK with default headers values
func NewProcessOK() *ProcessOK {

	return &ProcessOK{}
}

// WithPayload adds the payload to the process o k response
func (o *ProcessOK) WithPayload(payload models.ProcessResponse) *ProcessOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the process o k response
func (o *ProcessOK) SetPayload(payload models.ProcessResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProcessOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ProcessBadRequestCode is the HTTP code returned for type ProcessBadRequest
const ProcessBadRequestCode int = 400

/*
ProcessBadRequest Validation error.

swagger:response processBadRequest
*/
type ProcessBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewProcessBadRequest creates ProcessBadRequest with default headers values
func NewProcessBadRequest() *ProcessBadRequest {

	return &ProcessBadRequest{}
}

// WithPayload adds the payload to the process bad request response
func (o *ProcessBadRequest) WithPayload(payload *models.ErrorResponse) *ProcessBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the process bad request response
func (o *ProcessBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProcessBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProcessForbiddenCode is the HTTP code returned for type ProcessForbidden
const ProcessForbiddenCode int = 403

/*
ProcessForbidden Forbidden error.

swagger:response processForbidden
*/
type ProcessForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewProcessForbidden creates ProcessForbidden with default headers values
func NewProcessForbidden() *ProcessForbidden {

	return &ProcessForbidden{}
}

// WithPayload adds the payload to the process forbidden response
func (o *ProcessForbidden) WithPayload(payload *models.ErrorResponse) *ProcessForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the process forbidden response
func (o *ProcessForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProcessForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProcessInternalServerErrorCode is the HTTP code returned for type ProcessInternalServerError
const ProcessInternalServerErrorCode int = 500

/*
ProcessInternalServerError Internal server error.

swagger:response processInternalServerError
*/
type ProcessInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewProcessInternalServerError creates ProcessInternalServerError with default headers values
func NewProcessInternalServerError() *ProcessInternalServerError {

	return &ProcessInternalServerError{}
}

// WithPayload adds the payload to the process internal server error response
func (o *ProcessInternalServerError) WithPayload(payload *models.ErrorResponse) *ProcessInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the process internal server error response
func (o *ProcessInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProcessInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
